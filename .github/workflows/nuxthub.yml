name: Deploy to NuxtHub
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  backup:
    name: "Backup Production Database"
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v4

      - name: Create Database Backup
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          D1_DATABASE_ID: ${{ secrets.D1_DATABASE_ID }}
        run: |
          echo "Creating production database backup before deployment..."
          ./scripts/db-backup-automated.sh production || echo "Backup failed, continuing deployment"
          
      - name: Upload backup logs
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: backup-logs
          path: .backups/*.json

  deploy:
    name: "Deploy to NuxtHub"
    needs: [backup]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Ensure NuxtHub module is installed
        run: pnpx nuxthub@latest ensure

      - name: Build & Deploy to NuxtHub
        uses: nuxt-hub/action@v2
        env:
          NUXT_HUB_PROJECT_KEY: timezyme-revq
